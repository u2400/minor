<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 选课参数实体映射关系 -->
<hibernate-mapping package="com.shufe.model.course.election">
	<class name="ElectParams" table="XK_CS_T">
		<cache usage="read-write" region="taskCache"/>
		<id name="id" column="id" unsaved-value="null">
			<generator class="sequence">
				<param name="sequence">SEQ_XK_CS_T</param>
			</generator>
		</id>
		<property name="turn" column="XKLC" not-null="true"/>
		<set name="departs" table="XKCS_BM_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="BMID"
				class="com.shufe.model.system.baseinfo.Department"/>
		</set>
		<set name="majors" table="XKCS_ZY_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="ZYID"
				class="com.shufe.model.system.baseinfo.Speciality"/>
		</set>
		<set name="majorFields" table="XKCS_ZYFX_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="ZYFXID"
				class="com.shufe.model.system.baseinfo.SpecialityAspect"/>
		</set>
		<!-- 后来添加的选课参数条件允许内的非当轮可退课的学生学籍状态q。 -->
		<set name="studentStates" table="XJZT_XZ_STATE_T" lazy="false">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="XSXJZTID"
				class="com.ekingstar.eams.system.basecode.industry.StudentState"/>
		</set>
		<set name="stdTypes" table="XKCS_XSLB_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="XSLBID"
				class="com.ekingstar.eams.system.baseinfo.StudentType"/>
		</set>
		<set name="stds" table="XKCS_XS_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<many-to-many column="XSID" class="com.shufe.model.std.Student"/>
		</set>
		<set name="enrollTurns" table="XKCS_RXPC_T">
			<cache usage="read-write" region="taskCache"/>
			<key column="XKCSID"/>
			<element type="string" column="RXPC" length="100"/>
		</set>
        <set name="notCurrentCourseTypes" table="XKCS_TK_FDLKCLB_T">
        	<cache usage="read-write" region="taskCache"/>
            <key column="XKCSID"/>
            <many-to-many column="KCLBID"
                class="com.ekingstar.eams.system.basecode.industry.CourseType"/>
        </set>
		<many-to-one name="calendar" column="JXRLID" not-null="true"/>
		<property name="startAt" column="KSSJ" not-null="true"/>
		<property name="endAt" column="JZSJ" not-null="true"/>
		<property name="electStartAt" column="XKKSSJ" not-null="true"/>
		<property name="electEndAt" column="XKJZSJ" not-null="true"/>
		<property name="isOpenElection" column="SFXK"/>
		<property name="isRestudyAllowed" column="SFCX"/>
		<property name="isOverMaxAllowed" column="SFCGRSSX"/>
		<property name="isUnderMinAllowed" column="SFDYRSXX"/>
		<property name="isCancelAnyTime" column="SFZYTK"/>
		<property name="isCheckEvaluation" column="SFJCPJ"/>
		<property name="isSchoolDistrictRestrict" column="SFXZXQ" not-null="true"/>
		<property name="isAwardCreditConsider" column="SYJLXF"/>
		<property name="isInPlanOfCourse" column="SFJHNKC"/>
		<!--是否从范围上限制重修-->
		<property name="isCheckScopeForReSturdy" column="SFXZCX"/>
		<property name="isLimitedInTeachClass" column="SFXZJXB" not-null="true"/>
		<property name="floatCredit" column="FDXF"/>
		<!--property name="notice" column="ZYSX" type="org.springframework.orm.hibernate3.support.ClobStringType"/-->
		<many-to-one name="notice" column="ZYSXID"  cascade="all"/>
	</class>
	
	 <class name="ParamContent" table="XK_CSTZ_T">
        <id name="id" column="ID" unsaved-value="null">
			<generator class="sequence">
				<param name="sequence">SEQ_XK_CSTZ_T</param>
			</generator>
		</id>
		<property name="notice" column="ZYSX" not-null="true" type="org.springframework.orm.hibernate3.support.ClobStringType"/>
    </class>
	<query name="getElectParams">
		<![CDATA[
			select distinct params
			from ElectParams as params 
			join params.stdTypes as stdType
			where stdType.id in (:stdTypeIds)
			and params.calendar=(:calendar)
			]]>
	</query>
</hibernate-mapping>